<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>reject_manager</action_name>
        <active>true</active>
        <client>true</client>
        <comments/>
        <condition>current.state == 'Submitted' &amp;&amp; (((new global.customDelegationUtil()).getMyDelegates(current.manager).toString().contains(gs.getUserID())) &amp;&amp; new tenroxUtil().hasRoleExactly(gs.getUserID(), 'x_nykl3_tenroxnbsa.tenrox_manager'))</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <hint/>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <name>Reject</name>
        <onclick>verifyRejectRemarksManager()</onclick>
        <order>100</order>
        <script><![CDATA[// This Reject UI Action is for Manager
// Remark are necessary for recalling

//Client-side 'onclick' function
function verifyRejectRemarksManager() {
	
	if(g_form.getValue('remarks') == '') {
		alert('Remarks are manadatory for rejecting');
		g_form.setMandatory('remarks', true);
		return false;  //Abort submission
   }
   //Call the UI Action and skip the 'onclick' function
   gsftSubmit(null, g_form.getFormElement(), 'reject_manager'); //MUST call the 'Action name' set in this UI Action
}

//Code that runs without 'onclick'
if(typeof window == 'undefined')
   recall();

//Server-side function
function recall() {
	current.state = 'Open';
	current.update();
	action.setRedirectURL(current);
	
	//create event to send Rejection Notification email to employee
	gs.eventQueue("x_nykl3_tenroxnbsa.reject_from_manager",  current, gs.getUserID(), gs.getUserName());
	
}
//new global.WorkflowApprovalUtils().cancelAll(current, 'Timesheet Recalled by '+gs.getUserDisplayName());
//new global.Workflow().restartWorkflow(current);]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>GARGL</sys_created_by>
        <sys_created_on>2017-10-24 13:03:24</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ddd663f40f060b401416d23be1050e57</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>Reject</sys_name>
        <sys_overrides/>
        <sys_package display_value="TenroxNBSA" source="x_nykl3_tenroxnbsa">1a0e09cc0f4332001416d23be1050e3f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="TenroxNBSA">1a0e09cc0f4332001416d23be1050e3f</sys_scope>
        <sys_update_name>sys_ui_action_ddd663f40f060b401416d23be1050e57</sys_update_name>
        <sys_updated_by>GARGL</sys_updated_by>
        <sys_updated_on>2018-04-18 19:29:43</sys_updated_on>
        <table>x_nykl3_tenroxnbsa_timesheet</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
